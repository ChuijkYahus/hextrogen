import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id "fabric-loom" version "1.7-SNAPSHOT"
	id "maven-publish"
	id "org.jetbrains.kotlin.jvm" version "1.8.0"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
    maven { url = "https://maven.terraformersmc.com/releases" }
    maven { url = "https://maven.shedaniel.me" }
    maven { url = "https://maven.blamejared.com" }
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
    maven { url = "https://mvn.devos.one/snapshots" }
    maven { url = "https://maven.ladysnake.org/releases" }
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://mvn.devos.one/releases" }
	maven { url = "https://maven.tterrag.com" }
	maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven" }
	maven { url = "https://maven.teamresourceful.com/repository/maven-public" }
	maven { url = "https://maven.parchmentmc.org" }
	maven { url = "https://maven.is-immensely.gay/nightly"}

	maven {
		url = "https://jitpack.io/"
		content { includeGroupAndSubgroups("com.github") }
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered {
		officialMojangMappings()
		it.parchment("org.parchmentmc.data:parchment-$minecraft_version:$parchment_version@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

	implementation "com.teamresourceful:resourceful-cosmetics-4j:$resourceful_cosmetics_version"
	modApi "com.teamresourceful.resourcefullib:resourcefullib-fabric-$minecraft_version:$resourcefullib_version"
	modApi "earth.terrarium.botarium:botarium-fabric-$minecraft_version:$botarium_version"
	modApi "uwu.serenity.critter:critter-fabric:$critter_version"
	modImplementation "dev.emi:trinkets:${trinkets_version}"
	modImplementation "com.simibubi.create:create-fabric-$minecraft_version:$create_version"
	modImplementation "earth.terrarium.baubly:baubly-common-$minecraft_version:$baubly_version" transitive false
	modImplementation "earth.terrarium.baubly:baubly-fabric-$minecraft_version:$baubly_version" transitive false
	modImplementation "maven.modrinth:estrogen:$estrogen_version-fabric"

	modImplementation("at.petra-k.hexcasting:hexcasting-fabric-$minecraft_version:$hexcasting_version") {
		exclude module: "phosphor"
		exclude module: "lithium"
		exclude module: "emi"
	}
	modLocalRuntime "at.petra-k.paucal:paucal-fabric-$minecraft_version:$paucal_version"
	modLocalRuntime "vazkii.patchouli:Patchouli:$minecraft_version-$patchouli_version-FABRIC"
	modLocalRuntime "dev.onyxstudios.cardinal-components-api:cardinal-components-api:$cardinal_components_version"
	modLocalRuntime "me.shedaniel.cloth:cloth-config-fabric:$cloth_config_version"
	modLocalRuntime "com.samsthenerd.inline:inline-fabric:$minecraft_version-$inline_version"
	modLocalRuntime files("${rootProject.rootDir}/libs/serialization-hooks-0.4.99999.jar")
}

processResources {
	inputs.property "version", project.version
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

tasks.withType(KotlinCompile).configureEach {
	kotlinOptions {
		jvmTarget = 17
	}
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}